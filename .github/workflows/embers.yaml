name: Embers
run-name: Embers ${{ github.event_name == 'push' && 'main' || format('MR {0}', github.event.pull_request.title) }}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    paths-ignore:
      - "docker/**"
      - "docs/**"
      - "*.md"
  pull_request:
    paths-ignore:
      - "docker/**"
      - "docs/**"
      - "*.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./.github/workflows/actions/setup-rust

      - name: Check formatting
        run: cargo make format-check

      - name: Run security audit
        run: cargo make audit

      - name: Build
        run: cargo build --all-targets

      - name: Run clippy
        run: cargo make clippy

      - name: Run tests
        run: cargo make test

  lint-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        working-directory: ./packages/server/tests
        run: poetry install

      - name: Format tests
        working-directory: ./packages/server/tests
        run: poetry run ruff format --check

      - name: Lint tests
        working-directory: ./packages/server/tests
        run: poetry run ruff check

  generate-schema:
    runs-on: ubuntu-latest

    #  if: github.ref == 'refs/heads/main'
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./.github/workflows/actions/setup-rust

      - name: Generate schema
        run: cargo make server generate-schema

      - name: Upload build artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: schema.json
          path: packages/server/schema.json

      - name: Update frontend with new schema.json
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.EMBERS_TOKEN }}
          repository: F1R3FLY-io/embers-frontend
          event-type: update-schema
          client-payload: '{"schema_url": "https://api.github.com/repos/F1R3FLY-io/embers/actions/artifacts/${{ steps.upload-artifact.outputs.artifact-id }}/zip"}'
