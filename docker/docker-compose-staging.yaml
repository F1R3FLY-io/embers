services:
  firefly:
    image: f1r3flyindustries/f1r3fly-scala-node:latest
    pull_policy: always
    user: root
    env_file:
      - .env
    volumes:
      - ./mainnet/genesis:/var/lib/rnode/genesis
      - ./certs/node.key.pem:/var/lib/rnode/node.key.pem:ro
      - ./certs/node.certificate.pem:/var/lib/rnode/node.certificate.pem:ro
    command:
      - run
      - -s
      - --validator-private-key=6a786ec387aff99fcce1bd6faa35916bfad3686d5c98e90a89f77670f535607c
      - --host=firefly
      - --no-upnp
      - --allow-private-addresses
      - --synchrony-constraint-threshold=0.0
      - --protocol-port=40400
      - --discovery-port=40404
      - --tls-key-path=/var/lib/rnode/node.key.pem
      - --tls-certificate-path=/var/lib/rnode/node.certificate.pem
    networks:
      - mainnet

  firefly-read:
    image: f1r3flyindustries/f1r3fly-scala-node:latest
    pull_policy: always
    user: root
    command:
      - run
      - --bootstrap=rnode://ebffd419dea60220734ccea8875e86d87bac10a7@firefly?protocol=40400&discovery=40404
      - --host=firefly-read
      - --no-upnp
      - --allow-private-addresses
    networks:
      - mainnet

  firefly-testnet:
    image: f1r3flyindustries/f1r3fly-scala-node:latest
    pull_policy: always
    user: root
    volumes:
      - ./testnet/genesis:/var/lib/rnode/genesis
      - ./certs/node.key.pem:/var/lib/rnode/node.key.pem:ro
      - ./certs/node.certificate.pem:/var/lib/rnode/node.certificate.pem:ro
    command:
      - run
      - -s
      - --validator-private-key=6a786ec387aff99fcce1bd6faa35916bfad3686d5c98e90a89f77670f535607c
      - --host=firefly-testnet
      - --no-upnp
      - --allow-private-addresses
      - --synchrony-constraint-threshold=0.0
      - --protocol-port=40400
      - --discovery-port=40404
      - --tls-key-path=/var/lib/rnode/node.key.pem
      - --tls-certificate-path=/var/lib/rnode/node.certificate.pem
    networks:
      - testnet

  firefly-read-testnet:
    image: f1r3flyindustries/f1r3fly-scala-node:latest
    pull_policy: always
    user: root
    command:
      - run
      - --bootstrap=rnode://ebffd419dea60220734ccea8875e86d87bac10a7@firefly-testnet?protocol=40400&discovery=40404
      - --host=firefly-read-testnet
      - --no-upnp
      - --allow-private-addresses
    networks:
      - testnet

  embers:
    image: f1r3flyindustries/embers:0.0.2
    pull_policy: always
    environment:
      EMBERS__MAINNET__AGENTS_ENV_KEY: 69D4BC8ED86915383E68FAF1E4F9D8E22E02CDD3702730C61FE3B45FBBDF0097
      EMBERS__MAINNET__AGENTS_TEAMS_ENV_KEY: 85348C6D6AEF0B4761F8B8047111B3A2F7C9DF8CB24F91B66B77893DDE21DEE5
      EMBERS__MAINNET__DEPLOY_SERVICE_URL: http://firefly:40401
      EMBERS__MAINNET__OBSERVER_URL: http://firefly-read:40403
      EMBERS__MAINNET__OBSERVER_WS_API_URL: ws://firefly-read:40403
      EMBERS__MAINNET__PROPOSE_SERVICE_URL: http://firefly:40402
      EMBERS__MAINNET__SERVICE_KEY: 232DADA5BBAFC0799D5F370DA04AF70CE438F69F954512B26D6FB5B560B81DFE
      EMBERS__MAINNET__VALIDATOR_WS_API_URL: ws://firefly:40403
      EMBERS__MAINNET__WALLETS_ENV_KEY: 8BDC54B5551812C43428EB172A2079ABBEF13B5370BB7535F78807CDEBA3E7B3
      EMBERS__TESTNET__DEPLOY_SERVICE_URL: http://firefly-testnet:40401
      EMBERS__TESTNET__ENV_KEY: D1BD29C232D11142E852EEE23482B239AF5494DFA10D64E82A72A8CDF82D5127
      EMBERS__TESTNET__OBSERVER_URL: http://firefly-read-testnet:40403
      EMBERS__TESTNET__OBSERVER_WS_API_URL: ws://firefly-read-testnet:40403
      EMBERS__TESTNET__PROPOSE_SERVICE_URL: http://firefly-testnet:40402
      EMBERS__TESTNET__SERVICE_KEY: 732240A471E12931D858F147165BA1B52C011B92B9E8CD7959AADF06D7ACE622
      EMBERS__TESTNET__VALIDATOR_WS_API_URL: ws://firefly-testnet:40403
    networks:
      - mainnet
      - testnet
    depends_on:
      firefly:
        condition: service_healthy
      firefly-read:
        condition: service_healthy
      firefly-testnet:
        condition: service_healthy
      firefly-read-testnet:
        condition: service_healthy

  embers-frontend:
    image: f1r3flyindustries/embers-frontend:0.0.2
    pull_policy: always
    environment:
      API_URL: https://localhost
    networks:
      - mainnet
      - testnet
    depends_on:
      embers:
        condition: service_started

  nginx:
    image: nginx:latest
    pull_policy: always
    container_name: nginx_proxy
    restart: always
    ports:
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certificate.crt:/etc/nginx/certs/certificate.crt
      - ./private.key:/etc/nginx/certs/private.key
    networks:
      - mainnet
      - testnet
    depends_on:
      - embers
      - embers-frontend

networks:
  mainnet:
    driver: bridge
  testnet:
    driver: bridge
